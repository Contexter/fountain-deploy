openapi: 3.0.1
info:
  title: Character Management API
  description: |
    This API facilitates managing characters within a screenplay application, enabling characters to exist independently of specific scripts. It supports operations for creating, listing, retrieving, updating, and deleting characters, and managing their paraphrases, providing a comprehensive toolset for screenplay character management.
  version: "1.0.0"
servers:
  - url: 'https://character.fountain.coach'
    description: Main production server for the Character Management API.
paths:
  /characters:
    get:
      summary: Retrieve All Characters
      operationId: listCharacters
      description: Lists all characters stored within the application, offering an overview of the characters available for screenplay development.
      responses:
        '200':
          description: A JSON array of character entities.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
        '500':
          description: Internal server error indicating a failure to process the request.
    post:
      summary: Create a New Character
      operationId: createCharacter
      description: Allows for the creation of a new character, adding to the pool of characters available for inclusion in screenplays.
      requestBody:
        required: true
        description: A JSON object detailing the new character to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreateRequest'
      responses:
        '201':
          description: Character successfully created, returning the new character entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '400':
          description: Bad request due to invalid input data.
        '500':
          description: Internal server error indicating a failure in creating the character.

  /characters/{characterId}/paraphrases:
    get:
      summary: Retrieve All Paraphrases for a Character
      operationId: listCharacterParaphrases
      description: Retrieves all paraphrases linked to a specific character, including a commentary on why each paraphrase is connected to the original character.
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier of the character whose paraphrases are to be retrieved.
      responses:
        '200':
          description: A JSON array of paraphrases for the specified character.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paraphrase'
        '404':
          description: The specified character was not found.
        '500':
          description: Internal server error indicating a failure to retrieve the paraphrases.
    post:
      summary: Create a New Paraphrase for a Character
      operationId: createCharacterParaphrase
      description: Allows for the creation of a new paraphrase linked to a character. Clients must provide the paraphrased text and a commentary explaining the link to the original character.
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: integer
          description: The unique identifier of the character to which the paraphrase will be linked.
      requestBody:
        required: true
        description: A JSON object containing the new paraphrase's details and its link commentary.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paraphrase'
      responses:
        '201':
          description: The paraphrase has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paraphrase'
        '400':
          description: Bad request due to invalid input data.
        '404':
          description: The specified character was not found.
        '500':
          description: Internal server error indicating a failure in creating the paraphrase.

components:
  schemas:
    Character:
      type: object
      description: Represents a character entity within the screenplay application, containing details such as name, description, and associated script IDs.
      properties:
        characterId:
          type: integer
          description: Unique identifier for the character.
          example: 1
        name:
          type: string
          description: Name of the character.
          example: "Juliet"
        description:
          type: string
          description: A brief description of the character and their role within the screenplay.
          example: "The heroine of Romeo and Juliet."
        scriptIds:
          type: array
          description: Array of script IDs where the character appears, can be empty if the character is not currently part of any script.
          items:
            type: integer
          example: [2, 5, 7]
        paraphrases:
          type: array
          description: Array of paraphrases linked to this character, each with its own text and commentary.
          items:
            $ref: '#/components/schemas/Paraphrase'
      required:
        - name

    CharacterCreateRequest:
      type: object
      description: Schema defining the structure required to create a new character, including name and optionally a description.
      properties:
        name:
          type: string
          description: Name of the new character.
          example: "Juliet"
        description:
          type: string
          description: Description of the new character, outlining their role and significance.
          example: "The heroine of Romeo and Juliet."
      required:
        - name

    CharacterUpdateRequest:
      type: object
      description: Schema for updating the details of an existing character, allowing changes to the name, description, and associated script IDs.
      properties:
        name:
          type: string
          description: Updated name of the character.
          example: "Juliet Capulet"
        description:
          type: string
          description: Updated description of the character, providing a more detailed background and role in the story.
          example: "A detailed description of Juliet, including background and role in the story."

    Paraphrase:
      type: object
      description: Represents a paraphrased version of a character description, including textual paraphrase and commentary on the connection to the original.
      required:
        - originalId
        - text
        - commentary
      properties:
        paraphraseId:
          type: integer
          format: int64
          description: The unique identifier for the Paraphrase, automatically generated upon creation.
        originalId:
          type: integer
          description: The ID of the original character to which this paraphrase is linked.
        text:
          type: string
          description: The paraphrased text of the original character description.
        commentary:
          type: string
          description: An explanatory note on why the paraphrase is linked to the original character.
